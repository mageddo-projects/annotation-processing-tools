plugins {
	id 'net.researchgate.release' version '3.0.2'
	id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
  throw new UnsupportedOperationException(
      "Please use JDK 8 to compile this project, current: ${JavaVersion.current()}"
  )
}

subprojects {

  apply plugin: "java-library"

  repositories {
    mavenLocal()
    mavenCentral()
  }

  sourceCompatibility = JavaVersion.VERSION_1_7

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_7
  }

  test {
    useJUnitPlatform()
    testLogging {
      events "failed"
      exceptionFormat "full"
    }
  }
}

nexusPublishing {
	repositories {
		mavenCentral {
			nexusUrl = uri("https://oss.sonatype.org/service/local/")
			snapshotRepositoryUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
			username = project.findProperty("ossrhUsername")
			password = project.findProperty("ossrhPassword")
		}
	}
}


configure([
    project(":aptools"), project(":lombok-ext"), project(":reflection-config-generator")
]){
  apply from: "${rootProject.rootDir}/nexus.gradle"
}

release {

	project.ext.set("release.useAutomaticVersion", true)
	git {
		requireBranch.set("master")
	}
	failOnCommitNeeded = false
	failOnPublishNeeded = false
	failOnUnversionedFiles = false
	buildTasks = []
}

confirmReleaseVersion.doLast {
	def f = file("${project.projectDir}/README.md")
	def text = f.text
	f.withWriter { w ->
		w << text.replaceAll("(:\\ )*\\d+\\.\\d+\\.\\d+", "\$1${version}")
	}
}
